; Auto-generated. Do not edit!


(cl:in-package fixposition_driver_ros1-msg)


;//! \htmlinclude GnssSats.msg.html

(cl:defclass <GnssSats> (roslisp-msg-protocol:ros-message)
  ((constellation
    :reader constellation
    :initarg :constellation
    :type cl:string
    :initform "")
   (sat_id
    :reader sat_id
    :initarg :sat_id
    :type (cl:vector cl:fixnum)
   :initform (cl:make-array 0 :element-type 'cl:fixnum :initial-element 0))
   (azim
    :reader azim
    :initarg :azim
    :type (cl:vector cl:fixnum)
   :initform (cl:make-array 0 :element-type 'cl:fixnum :initial-element 0))
   (elev
    :reader elev
    :initarg :elev
    :type (cl:vector cl:fixnum)
   :initform (cl:make-array 0 :element-type 'cl:fixnum :initial-element 0))
   (cno_l1
    :reader cno_l1
    :initarg :cno_l1
    :type (cl:vector cl:fixnum)
   :initform (cl:make-array 0 :element-type 'cl:fixnum :initial-element 0))
   (cno_l2
    :reader cno_l2
    :initarg :cno_l2
    :type (cl:vector cl:fixnum)
   :initform (cl:make-array 0 :element-type 'cl:fixnum :initial-element 0)))
)

(cl:defclass GnssSats (<GnssSats>)
  ())

(cl:defmethod cl:initialize-instance :after ((m <GnssSats>) cl:&rest args)
  (cl:declare (cl:ignorable args))
  (cl:unless (cl:typep m 'GnssSats)
    (roslisp-msg-protocol:msg-deprecation-warning "using old message class name fixposition_driver_ros1-msg:<GnssSats> is deprecated: use fixposition_driver_ros1-msg:GnssSats instead.")))

(cl:ensure-generic-function 'constellation-val :lambda-list '(m))
(cl:defmethod constellation-val ((m <GnssSats>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader fixposition_driver_ros1-msg:constellation-val is deprecated.  Use fixposition_driver_ros1-msg:constellation instead.")
  (constellation m))

(cl:ensure-generic-function 'sat_id-val :lambda-list '(m))
(cl:defmethod sat_id-val ((m <GnssSats>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader fixposition_driver_ros1-msg:sat_id-val is deprecated.  Use fixposition_driver_ros1-msg:sat_id instead.")
  (sat_id m))

(cl:ensure-generic-function 'azim-val :lambda-list '(m))
(cl:defmethod azim-val ((m <GnssSats>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader fixposition_driver_ros1-msg:azim-val is deprecated.  Use fixposition_driver_ros1-msg:azim instead.")
  (azim m))

(cl:ensure-generic-function 'elev-val :lambda-list '(m))
(cl:defmethod elev-val ((m <GnssSats>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader fixposition_driver_ros1-msg:elev-val is deprecated.  Use fixposition_driver_ros1-msg:elev instead.")
  (elev m))

(cl:ensure-generic-function 'cno_l1-val :lambda-list '(m))
(cl:defmethod cno_l1-val ((m <GnssSats>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader fixposition_driver_ros1-msg:cno_l1-val is deprecated.  Use fixposition_driver_ros1-msg:cno_l1 instead.")
  (cno_l1 m))

(cl:ensure-generic-function 'cno_l2-val :lambda-list '(m))
(cl:defmethod cno_l2-val ((m <GnssSats>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader fixposition_driver_ros1-msg:cno_l2-val is deprecated.  Use fixposition_driver_ros1-msg:cno_l2 instead.")
  (cno_l2 m))
(cl:defmethod roslisp-msg-protocol:serialize ((msg <GnssSats>) ostream)
  "Serializes a message object of type '<GnssSats>"
  (cl:let ((__ros_str_len (cl:length (cl:slot-value msg 'constellation))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_str_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_str_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_str_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_str_len) ostream))
  (cl:map cl:nil #'(cl:lambda (c) (cl:write-byte (cl:char-code c) ostream)) (cl:slot-value msg 'constellation))
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'sat_id))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let* ((signed ele) (unsigned (cl:if (cl:< signed 0) (cl:+ signed 65536) signed)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) unsigned) ostream)
    ))
   (cl:slot-value msg 'sat_id))
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'azim))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let* ((signed ele) (unsigned (cl:if (cl:< signed 0) (cl:+ signed 65536) signed)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) unsigned) ostream)
    ))
   (cl:slot-value msg 'azim))
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'elev))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let* ((signed ele) (unsigned (cl:if (cl:< signed 0) (cl:+ signed 65536) signed)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) unsigned) ostream)
    ))
   (cl:slot-value msg 'elev))
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'cno_l1))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let* ((signed ele) (unsigned (cl:if (cl:< signed 0) (cl:+ signed 65536) signed)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) unsigned) ostream)
    ))
   (cl:slot-value msg 'cno_l1))
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'cno_l2))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let* ((signed ele) (unsigned (cl:if (cl:< signed 0) (cl:+ signed 65536) signed)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) unsigned) ostream)
    ))
   (cl:slot-value msg 'cno_l2))
)
(cl:defmethod roslisp-msg-protocol:deserialize ((msg <GnssSats>) istream)
  "Deserializes a message object of type '<GnssSats>"
    (cl:let ((__ros_str_len 0))
      (cl:setf (cl:ldb (cl:byte 8 0) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:slot-value msg 'constellation) (cl:make-string __ros_str_len))
      (cl:dotimes (__ros_str_idx __ros_str_len msg)
        (cl:setf (cl:char (cl:slot-value msg 'constellation) __ros_str_idx) (cl:code-char (cl:read-byte istream)))))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'sat_id) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'sat_id)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((unsigned 0))
      (cl:setf (cl:ldb (cl:byte 8 0) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) unsigned) (cl:read-byte istream))
      (cl:setf (cl:aref vals i) (cl:if (cl:< unsigned 32768) unsigned (cl:- unsigned 65536)))))))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'azim) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'azim)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((unsigned 0))
      (cl:setf (cl:ldb (cl:byte 8 0) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) unsigned) (cl:read-byte istream))
      (cl:setf (cl:aref vals i) (cl:if (cl:< unsigned 32768) unsigned (cl:- unsigned 65536)))))))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'elev) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'elev)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((unsigned 0))
      (cl:setf (cl:ldb (cl:byte 8 0) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) unsigned) (cl:read-byte istream))
      (cl:setf (cl:aref vals i) (cl:if (cl:< unsigned 32768) unsigned (cl:- unsigned 65536)))))))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'cno_l1) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'cno_l1)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((unsigned 0))
      (cl:setf (cl:ldb (cl:byte 8 0) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) unsigned) (cl:read-byte istream))
      (cl:setf (cl:aref vals i) (cl:if (cl:< unsigned 32768) unsigned (cl:- unsigned 65536)))))))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'cno_l2) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'cno_l2)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((unsigned 0))
      (cl:setf (cl:ldb (cl:byte 8 0) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) unsigned) (cl:read-byte istream))
      (cl:setf (cl:aref vals i) (cl:if (cl:< unsigned 32768) unsigned (cl:- unsigned 65536)))))))
  msg
)
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql '<GnssSats>)))
  "Returns string type for a message object of type '<GnssSats>"
  "fixposition_driver_ros1/GnssSats")
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql 'GnssSats)))
  "Returns string type for a message object of type 'GnssSats"
  "fixposition_driver_ros1/GnssSats")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql '<GnssSats>)))
  "Returns md5sum for a message object of type '<GnssSats>"
  "048fb6a4e516eca717a91a2a5ccba58b")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql 'GnssSats)))
  "Returns md5sum for a message object of type 'GnssSats"
  "048fb6a4e516eca717a91a2a5ccba58b")
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql '<GnssSats>)))
  "Returns full string definition for message of type '<GnssSats>"
  (cl:format cl:nil "####################################################################################################~%#~%#    Copyright (c) 2023  ___     ___~%#                       \\\\  \\\\  /  /~%#                        \\\\  \\\\/  /~%#                         /  /\\\\  \\\\~%#                        /__/  \\\\__\\\\  Fixposition AG~%#~%####################################################################################################~%#~%# Fixposition GNSS satellite signal statistics message.~%#~%#~%####################################################################################################~%~%# Format | Field         | Unit    | Description~%# -------|---------------|---------|------------------------------------|~%string     constellation # [Hex]   | Signal ID (see below).~%int16[]    sat_id        # [-]     | Satellite ID number.~%int16[]    azim          # [deg]   | Satellite azimuth from true North.~%int16[]    elev          # [deg]   | Satellite elevation.~%int16[]    cno_l1        # [db-Hz] | Satellite SNR (C/No) for L1-band.~%int16[]    cno_l2        # [db-Hz] | Satellite SNR (C/No) for L2-band.~%~%~%"))
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql 'GnssSats)))
  "Returns full string definition for message of type 'GnssSats"
  (cl:format cl:nil "####################################################################################################~%#~%#    Copyright (c) 2023  ___     ___~%#                       \\\\  \\\\  /  /~%#                        \\\\  \\\\/  /~%#                         /  /\\\\  \\\\~%#                        /__/  \\\\__\\\\  Fixposition AG~%#~%####################################################################################################~%#~%# Fixposition GNSS satellite signal statistics message.~%#~%#~%####################################################################################################~%~%# Format | Field         | Unit    | Description~%# -------|---------------|---------|------------------------------------|~%string     constellation # [Hex]   | Signal ID (see below).~%int16[]    sat_id        # [-]     | Satellite ID number.~%int16[]    azim          # [deg]   | Satellite azimuth from true North.~%int16[]    elev          # [deg]   | Satellite elevation.~%int16[]    cno_l1        # [db-Hz] | Satellite SNR (C/No) for L1-band.~%int16[]    cno_l2        # [db-Hz] | Satellite SNR (C/No) for L2-band.~%~%~%"))
(cl:defmethod roslisp-msg-protocol:serialization-length ((msg <GnssSats>))
  (cl:+ 0
     4 (cl:length (cl:slot-value msg 'constellation))
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'sat_id) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 2)))
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'azim) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 2)))
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'elev) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 2)))
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'cno_l1) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 2)))
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'cno_l2) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 2)))
))
(cl:defmethod roslisp-msg-protocol:ros-message-to-list ((msg <GnssSats>))
  "Converts a ROS message object to a list"
  (cl:list 'GnssSats
    (cl:cons ':constellation (constellation msg))
    (cl:cons ':sat_id (sat_id msg))
    (cl:cons ':azim (azim msg))
    (cl:cons ':elev (elev msg))
    (cl:cons ':cno_l1 (cno_l1 msg))
    (cl:cons ':cno_l2 (cno_l2 msg))
))
